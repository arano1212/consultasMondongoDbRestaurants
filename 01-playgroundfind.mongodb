use('restaurants_sample');

//db.restaurants.find({});
//db.restaurants.find({}).limit(5);
//db.restaurants.find({}).skip(5).limit(10);
//db.restaurants.find({ score: { $gt: 90 } });
//db.restaurants.find({ score: { $lt: 90 } });
/*db.restaurants.aggregate([
  { $unwind: "$grades" },
  {
    $match: {
      $or: [
        { "grades.score": { $gt: 90 } }
      ]
    }
  },
  {
    $group: {
      _id: "$_id",
      name: { $first: "$name" },
      address: { $first: "$address" },
      borough: { $first: "$borough" },
      cuisine: { $first: "$cuisine" },
      grades: { $push: "$grades" }
    }
  }
]);*/

/*db.restaurants.aggregate([
  { $unwind: "$grades" },
  {
    $match: {
      $or: [
        { "grades.score": { $gt: 80, $lt:100 } },
        
      ]
    }
  },
  {
    $group: {
      _id: "$_id",
      name: { $first: "$name" },
      address: { $first: "$address" },
      borough: { $first: "$borough" },
      cuisine: { $first: "$cuisine" },
      grades: { $push: "$grades" }
    }
  }
]);*/

/*db.restaurants.aggregate([
  { $unwind: "$grades" },
  {
    $match: {
      $or: [
        { "grades.score": { $gt: 70, $lt:100 } },
        
      ]
    }
  },
  {
    $group: {
      _id: "$_id",
      name: { $first: "$name" },
      address: { $first: "$address" },
      borough: { $first: "$borough" },
      cuisine: { $first: "American" },
      grades: { $push: "$grades" }
    }
  }
]);*/

//db.restaurants.find({},{"_id": 0}).limit(1);
//db.restaurants.find({}, {"name": 1, "_id": 0});
/*db.restaurants.find({
  cuisine: "American ",
  "grades.grade": "A",
  borough: { $ne: "Brooklyn" }
});*/
//db.restaurants.find({ name: /Wil/});
/*db.restaurants.find({
  cuisine: {$in: ["American ", "China"]},
  borough: { $ne: "Bronx" }
});*/

/*db.restaurants.find({
  borough: { $ne: ["Bronxor", "Broklyn", "Staten Island"] }
})*/

/*db.restaurants.find({
  cuisine: { $nin: ["American ", "China"] }
});*/


/*db.restaurants.find({
  grades: {
    $elemMatch: {
      date: { $eq: ISODate("2014-08-11") },
      grade: "A",
      score: 11
    }
  }
});*/

//db.restaurants.find({}, { name: 1, _id: 0 }).sort({ name: 1 });
//db.restaurants.find({ address: { $exists: true } });
db.restaurants.aggregate([
  {
    $project: {
      name: 1,
      score: { $avg: "$grades.score" }
    }
  },
  { $sort: { score: -1 } },
  { $limit: 10 }
]);
